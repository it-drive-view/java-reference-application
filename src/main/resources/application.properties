
# permet de renvoyer les messages issus des exceptions au client http
server.error.include-message=always

spring.datasource.url=jdbc:postgresql://localhost:5432/reference
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true\
   
logging.config=logback.xml

job.platforms=findWork

###############################################
#
# etudier ci-dessous pourquoi ces lignes ne sont plus utiles ?
#
###############################################

#spring.jpa.generateDdl=true
#spring.jpa.database=POSTGRESQL
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

#dans le cas o? j'obtiens l'erreur 'La fonction org.postgresql.jdbc.PgConnection.createClob() n'est pas encore implementee.'
#au demarrage de mon service, alors, decommenter la ligne ci-dessous :
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults= false

data.provider.url=http://localhost:8090/api/v1
findwork.url=https://findwork.dev/api
findwork.token=2a63f298d63f2cda7b33df3b6a2741aeca96d9aa























